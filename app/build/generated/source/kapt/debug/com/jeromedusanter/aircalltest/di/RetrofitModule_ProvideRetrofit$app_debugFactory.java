// Generated by Dagger (https://google.github.io/dagger).
package com.jeromedusanter.aircalltest.di;

import dagger.internal.Factory;
import dagger.internal.Preconditions;
import retrofit2.Retrofit;

public final class RetrofitModule_ProvideRetrofit$app_debugFactory implements Factory<Retrofit> {
  private final RetrofitModule module;

  public RetrofitModule_ProvideRetrofit$app_debugFactory(RetrofitModule module) {
    this.module = module;
  }

  @Override
  public Retrofit get() {
    return provideInstance(module);
  }

  public static Retrofit provideInstance(RetrofitModule module) {
    return proxyProvideRetrofit$app_debug(module);
  }

  public static RetrofitModule_ProvideRetrofit$app_debugFactory create(RetrofitModule module) {
    return new RetrofitModule_ProvideRetrofit$app_debugFactory(module);
  }

  public static Retrofit proxyProvideRetrofit$app_debug(RetrofitModule instance) {
    return Preconditions.checkNotNull(
        instance.provideRetrofit$app_debug(),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
