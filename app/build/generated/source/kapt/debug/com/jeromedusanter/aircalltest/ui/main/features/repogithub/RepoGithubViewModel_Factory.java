// Generated by Dagger (https://google.github.io/dagger).
package com.jeromedusanter.aircalltest.ui.main.features.repogithub;

import com.jeromedusanter.aircalltest.domain.MainStore;
import com.jeromedusanter.aircalltest.domain.usecases.repogithub.GetIssuesHistoryByRepoSinceLastYearUseCase;
import com.jeromedusanter.aircalltest.domain.usecases.repogithub.GetRepoGithubUseCase;
import com.jeromedusanter.aircalltest.ui.main.features.repogithub.details.RepoGithubDetailsMapper;
import com.jeromedusanter.aircalltest.ui.main.features.repogithub.list.RepoGithubListMapper;
import com.jeromedusanter.aircalltest.ui.main.features.repogithub.list.filter.RepoGithubFilterMapper;
import dagger.internal.Factory;
import javax.inject.Provider;

public final class RepoGithubViewModel_Factory implements Factory<RepoGithubViewModel> {
  private final Provider<GetRepoGithubUseCase> getRepoGithubUseCaseProvider;

  private final Provider<GetIssuesHistoryByRepoSinceLastYearUseCase>
      getIssuesHistoryByRepoSinceLastYearUseCaseProvider;

  private final Provider<RepoGithubListMapper> listMapperProvider;

  private final Provider<RepoGithubDetailsMapper> detailsMapperProvider;

  private final Provider<RepoGithubFilterMapper> filterMapperProvider;

  private final Provider<MainStore> mainStoreProvider;

  public RepoGithubViewModel_Factory(
      Provider<GetRepoGithubUseCase> getRepoGithubUseCaseProvider,
      Provider<GetIssuesHistoryByRepoSinceLastYearUseCase>
          getIssuesHistoryByRepoSinceLastYearUseCaseProvider,
      Provider<RepoGithubListMapper> listMapperProvider,
      Provider<RepoGithubDetailsMapper> detailsMapperProvider,
      Provider<RepoGithubFilterMapper> filterMapperProvider,
      Provider<MainStore> mainStoreProvider) {
    this.getRepoGithubUseCaseProvider = getRepoGithubUseCaseProvider;
    this.getIssuesHistoryByRepoSinceLastYearUseCaseProvider =
        getIssuesHistoryByRepoSinceLastYearUseCaseProvider;
    this.listMapperProvider = listMapperProvider;
    this.detailsMapperProvider = detailsMapperProvider;
    this.filterMapperProvider = filterMapperProvider;
    this.mainStoreProvider = mainStoreProvider;
  }

  @Override
  public RepoGithubViewModel get() {
    return provideInstance(
        getRepoGithubUseCaseProvider,
        getIssuesHistoryByRepoSinceLastYearUseCaseProvider,
        listMapperProvider,
        detailsMapperProvider,
        filterMapperProvider,
        mainStoreProvider);
  }

  public static RepoGithubViewModel provideInstance(
      Provider<GetRepoGithubUseCase> getRepoGithubUseCaseProvider,
      Provider<GetIssuesHistoryByRepoSinceLastYearUseCase>
          getIssuesHistoryByRepoSinceLastYearUseCaseProvider,
      Provider<RepoGithubListMapper> listMapperProvider,
      Provider<RepoGithubDetailsMapper> detailsMapperProvider,
      Provider<RepoGithubFilterMapper> filterMapperProvider,
      Provider<MainStore> mainStoreProvider) {
    return new RepoGithubViewModel(
        getRepoGithubUseCaseProvider.get(),
        getIssuesHistoryByRepoSinceLastYearUseCaseProvider.get(),
        listMapperProvider.get(),
        detailsMapperProvider.get(),
        filterMapperProvider.get(),
        mainStoreProvider.get());
  }

  public static RepoGithubViewModel_Factory create(
      Provider<GetRepoGithubUseCase> getRepoGithubUseCaseProvider,
      Provider<GetIssuesHistoryByRepoSinceLastYearUseCase>
          getIssuesHistoryByRepoSinceLastYearUseCaseProvider,
      Provider<RepoGithubListMapper> listMapperProvider,
      Provider<RepoGithubDetailsMapper> detailsMapperProvider,
      Provider<RepoGithubFilterMapper> filterMapperProvider,
      Provider<MainStore> mainStoreProvider) {
    return new RepoGithubViewModel_Factory(
        getRepoGithubUseCaseProvider,
        getIssuesHistoryByRepoSinceLastYearUseCaseProvider,
        listMapperProvider,
        detailsMapperProvider,
        filterMapperProvider,
        mainStoreProvider);
  }

  public static RepoGithubViewModel newRepoGithubViewModel(
      GetRepoGithubUseCase getRepoGithubUseCase,
      GetIssuesHistoryByRepoSinceLastYearUseCase getIssuesHistoryByRepoSinceLastYearUseCase,
      RepoGithubListMapper listMapper,
      RepoGithubDetailsMapper detailsMapper,
      RepoGithubFilterMapper filterMapper,
      MainStore mainStore) {
    return new RepoGithubViewModel(
        getRepoGithubUseCase,
        getIssuesHistoryByRepoSinceLastYearUseCase,
        listMapper,
        detailsMapper,
        filterMapper,
        mainStore);
  }
}
