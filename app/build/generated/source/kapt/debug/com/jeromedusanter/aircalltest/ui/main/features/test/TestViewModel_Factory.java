// Generated by Dagger (https://google.github.io/dagger).
package com.jeromedusanter.aircalltest.ui.main.features.test;

import com.jeromedusanter.aircalltest.domain.MainStore;
import dagger.internal.Factory;
import javax.inject.Provider;

public final class TestViewModel_Factory implements Factory<TestViewModel> {
  private final Provider<MainStore> mainStoreProvider;

  public TestViewModel_Factory(Provider<MainStore> mainStoreProvider) {
    this.mainStoreProvider = mainStoreProvider;
  }

  @Override
  public TestViewModel get() {
    return provideInstance(mainStoreProvider);
  }

  public static TestViewModel provideInstance(Provider<MainStore> mainStoreProvider) {
    return new TestViewModel(mainStoreProvider.get());
  }

  public static TestViewModel_Factory create(Provider<MainStore> mainStoreProvider) {
    return new TestViewModel_Factory(mainStoreProvider);
  }

  public static TestViewModel newTestViewModel(MainStore mainStore) {
    return new TestViewModel(mainStore);
  }
}
