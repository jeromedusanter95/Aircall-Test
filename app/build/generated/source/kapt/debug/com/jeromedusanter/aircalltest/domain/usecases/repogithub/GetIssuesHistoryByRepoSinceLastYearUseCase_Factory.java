// Generated by Dagger (https://google.github.io/dagger).
package com.jeromedusanter.aircalltest.domain.usecases.repogithub;

import com.jeromedusanter.aircalltest.domain.boundaries.RepoGithubRepository;
import dagger.internal.Factory;
import javax.inject.Provider;

public final class GetIssuesHistoryByRepoSinceLastYearUseCase_Factory
    implements Factory<GetIssuesHistoryByRepoSinceLastYearUseCase> {
  private final Provider<RepoGithubRepository> repositoryProvider;

  public GetIssuesHistoryByRepoSinceLastYearUseCase_Factory(
      Provider<RepoGithubRepository> repositoryProvider) {
    this.repositoryProvider = repositoryProvider;
  }

  @Override
  public GetIssuesHistoryByRepoSinceLastYearUseCase get() {
    return provideInstance(repositoryProvider);
  }

  public static GetIssuesHistoryByRepoSinceLastYearUseCase provideInstance(
      Provider<RepoGithubRepository> repositoryProvider) {
    return new GetIssuesHistoryByRepoSinceLastYearUseCase(repositoryProvider.get());
  }

  public static GetIssuesHistoryByRepoSinceLastYearUseCase_Factory create(
      Provider<RepoGithubRepository> repositoryProvider) {
    return new GetIssuesHistoryByRepoSinceLastYearUseCase_Factory(repositoryProvider);
  }

  public static GetIssuesHistoryByRepoSinceLastYearUseCase
      newGetIssuesHistoryByRepoSinceLastYearUseCase(RepoGithubRepository repository) {
    return new GetIssuesHistoryByRepoSinceLastYearUseCase(repository);
  }
}
