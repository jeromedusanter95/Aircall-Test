// Generated by Dagger (https://google.github.io/dagger).
package com.jeromedusanter.aircalltest.data.remote.repogithub;

import com.jeromedusanter.aircalltest.data.remote.ApiService;
import com.jeromedusanter.aircalltest.data.remote.repogithub.mappers.IssueDataMapper;
import com.jeromedusanter.aircalltest.data.remote.repogithub.mappers.RepoGithubDataMapper;
import com.jeromedusanter.aircalltest.data.remote.repogithub.mappers.RepoGithubSortDataMapper;
import dagger.internal.Factory;
import javax.inject.Provider;

public final class RepoGithubRepositoryImpl_Factory implements Factory<RepoGithubRepositoryImpl> {
  private final Provider<ApiService> apiServiceProvider;

  private final Provider<RepoGithubDataMapper> repoGithubMapperProvider;

  private final Provider<RepoGithubSortDataMapper> sortMapperProvider;

  private final Provider<IssueDataMapper> issueMapperProvider;

  public RepoGithubRepositoryImpl_Factory(
      Provider<ApiService> apiServiceProvider,
      Provider<RepoGithubDataMapper> repoGithubMapperProvider,
      Provider<RepoGithubSortDataMapper> sortMapperProvider,
      Provider<IssueDataMapper> issueMapperProvider) {
    this.apiServiceProvider = apiServiceProvider;
    this.repoGithubMapperProvider = repoGithubMapperProvider;
    this.sortMapperProvider = sortMapperProvider;
    this.issueMapperProvider = issueMapperProvider;
  }

  @Override
  public RepoGithubRepositoryImpl get() {
    return provideInstance(
        apiServiceProvider, repoGithubMapperProvider, sortMapperProvider, issueMapperProvider);
  }

  public static RepoGithubRepositoryImpl provideInstance(
      Provider<ApiService> apiServiceProvider,
      Provider<RepoGithubDataMapper> repoGithubMapperProvider,
      Provider<RepoGithubSortDataMapper> sortMapperProvider,
      Provider<IssueDataMapper> issueMapperProvider) {
    return new RepoGithubRepositoryImpl(
        apiServiceProvider.get(),
        repoGithubMapperProvider.get(),
        sortMapperProvider.get(),
        issueMapperProvider.get());
  }

  public static RepoGithubRepositoryImpl_Factory create(
      Provider<ApiService> apiServiceProvider,
      Provider<RepoGithubDataMapper> repoGithubMapperProvider,
      Provider<RepoGithubSortDataMapper> sortMapperProvider,
      Provider<IssueDataMapper> issueMapperProvider) {
    return new RepoGithubRepositoryImpl_Factory(
        apiServiceProvider, repoGithubMapperProvider, sortMapperProvider, issueMapperProvider);
  }

  public static RepoGithubRepositoryImpl newRepoGithubRepositoryImpl(
      ApiService apiService,
      RepoGithubDataMapper repoGithubMapper,
      RepoGithubSortDataMapper sortMapper,
      IssueDataMapper issueMapper) {
    return new RepoGithubRepositoryImpl(apiService, repoGithubMapper, sortMapper, issueMapper);
  }
}
