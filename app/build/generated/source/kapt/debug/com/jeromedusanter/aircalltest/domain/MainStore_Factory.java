// Generated by Dagger (https://google.github.io/dagger).
package com.jeromedusanter.aircalltest.domain;

import com.jeromedusanter.aircalltest.domain.boundaries.RepoGithubRepository;
import dagger.internal.Factory;
import javax.inject.Provider;

public final class MainStore_Factory implements Factory<MainStore> {
  private final Provider<RepoGithubRepository> repositoryProvider;

  public MainStore_Factory(Provider<RepoGithubRepository> repositoryProvider) {
    this.repositoryProvider = repositoryProvider;
  }

  @Override
  public MainStore get() {
    return provideInstance(repositoryProvider);
  }

  public static MainStore provideInstance(Provider<RepoGithubRepository> repositoryProvider) {
    return new MainStore(repositoryProvider.get());
  }

  public static MainStore_Factory create(Provider<RepoGithubRepository> repositoryProvider) {
    return new MainStore_Factory(repositoryProvider);
  }

  public static MainStore newMainStore(RepoGithubRepository repository) {
    return new MainStore(repository);
  }
}
